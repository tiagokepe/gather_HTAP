
analytic_gather:     file format elf64-x86-64


Disassembly of section .init:

0000000000000730 <_init>:
 730:	48 83 ec 08          	sub    $0x8,%rsp
 734:	48 8b 05 ad 18 20 00 	mov    0x2018ad(%rip),%rax        # 201fe8 <__gmon_start__>
 73b:	48 85 c0             	test   %rax,%rax
 73e:	74 02                	je     742 <_init+0x12>
 740:	ff d0                	callq  *%rax
 742:	48 83 c4 08          	add    $0x8,%rsp
 746:	c3                   	retq   

Disassembly of section .plt:

0000000000000750 <.plt>:
 750:	ff 35 2a 18 20 00    	pushq  0x20182a(%rip)        # 201f80 <_GLOBAL_OFFSET_TABLE_+0x8>
 756:	ff 25 2c 18 20 00    	jmpq   *0x20182c(%rip)        # 201f88 <_GLOBAL_OFFSET_TABLE_+0x10>
 75c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000760 <free@plt>:
 760:	ff 25 2a 18 20 00    	jmpq   *0x20182a(%rip)        # 201f90 <free@GLIBC_2.2.5>
 766:	68 00 00 00 00       	pushq  $0x0
 76b:	e9 e0 ff ff ff       	jmpq   750 <.plt>

0000000000000770 <putchar@plt>:
 770:	ff 25 22 18 20 00    	jmpq   *0x201822(%rip)        # 201f98 <putchar@GLIBC_2.2.5>
 776:	68 01 00 00 00       	pushq  $0x1
 77b:	e9 d0 ff ff ff       	jmpq   750 <.plt>

0000000000000780 <puts@plt>:
 780:	ff 25 1a 18 20 00    	jmpq   *0x20181a(%rip)        # 201fa0 <puts@GLIBC_2.2.5>
 786:	68 02 00 00 00       	pushq  $0x2
 78b:	e9 c0 ff ff ff       	jmpq   750 <.plt>

0000000000000790 <__stack_chk_fail@plt>:
 790:	ff 25 12 18 20 00    	jmpq   *0x201812(%rip)        # 201fa8 <__stack_chk_fail@GLIBC_2.4>
 796:	68 03 00 00 00       	pushq  $0x3
 79b:	e9 b0 ff ff ff       	jmpq   750 <.plt>

00000000000007a0 <strtol@plt>:
 7a0:	ff 25 0a 18 20 00    	jmpq   *0x20180a(%rip)        # 201fb0 <strtol@GLIBC_2.2.5>
 7a6:	68 04 00 00 00       	pushq  $0x4
 7ab:	e9 a0 ff ff ff       	jmpq   750 <.plt>

00000000000007b0 <memcpy@plt>:
 7b0:	ff 25 02 18 20 00    	jmpq   *0x201802(%rip)        # 201fb8 <memcpy@GLIBC_2.14>
 7b6:	68 05 00 00 00       	pushq  $0x5
 7bb:	e9 90 ff ff ff       	jmpq   750 <.plt>

00000000000007c0 <__printf_chk@plt>:
 7c0:	ff 25 fa 17 20 00    	jmpq   *0x2017fa(%rip)        # 201fc0 <__printf_chk@GLIBC_2.3.4>
 7c6:	68 06 00 00 00       	pushq  $0x6
 7cb:	e9 80 ff ff ff       	jmpq   750 <.plt>

00000000000007d0 <exit@plt>:
 7d0:	ff 25 f2 17 20 00    	jmpq   *0x2017f2(%rip)        # 201fc8 <exit@GLIBC_2.2.5>
 7d6:	68 07 00 00 00       	pushq  $0x7
 7db:	e9 70 ff ff ff       	jmpq   750 <.plt>

00000000000007e0 <aligned_alloc@plt>:
 7e0:	ff 25 ea 17 20 00    	jmpq   *0x2017ea(%rip)        # 201fd0 <aligned_alloc@GLIBC_2.16>
 7e6:	68 08 00 00 00       	pushq  $0x8
 7eb:	e9 60 ff ff ff       	jmpq   750 <.plt>

Disassembly of section .plt.got:

00000000000007f0 <__cxa_finalize@plt>:
 7f0:	ff 25 02 18 20 00    	jmpq   *0x201802(%rip)        # 201ff8 <__cxa_finalize@GLIBC_2.2.5>
 7f6:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000000800 <main>:
 800:	41 55                	push   %r13
 802:	41 54                	push   %r12
 804:	55                   	push   %rbp
 805:	53                   	push   %rbx
 806:	48 89 f3             	mov    %rsi,%rbx
 809:	48 83 ec 08          	sub    $0x8,%rsp
 80d:	83 ff 05             	cmp    $0x5,%edi
 810:	0f 85 c8 00 00 00    	jne    8de <main+0xde>
 816:	48 8b 7e 08          	mov    0x8(%rsi),%rdi
 81a:	ba 0a 00 00 00       	mov    $0xa,%edx
 81f:	31 f6                	xor    %esi,%esi
 821:	e8 7a ff ff ff       	callq  7a0 <strtol@plt>
 826:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
 82a:	31 f6                	xor    %esi,%esi
 82c:	48 98                	cltq   
 82e:	ba 0a 00 00 00       	mov    $0xa,%edx
 833:	48 89 05 de 17 20 00 	mov    %rax,0x2017de(%rip)        # 202018 <TUPLE_SIZE>
 83a:	e8 61 ff ff ff       	callq  7a0 <strtol@plt>
 83f:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
 843:	31 f6                	xor    %esi,%esi
 845:	48 98                	cltq   
 847:	ba 0a 00 00 00       	mov    $0xa,%edx
 84c:	48 89 05 cd 17 20 00 	mov    %rax,0x2017cd(%rip)        # 202020 <NUM_COLS>
 853:	e8 48 ff ff ff       	callq  7a0 <strtol@plt>
 858:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
 85c:	31 f6                	xor    %esi,%esi
 85e:	ba 0a 00 00 00       	mov    $0xa,%edx
 863:	48 63 e8             	movslq %eax,%rbp
 866:	e8 35 ff ff ff       	callq  7a0 <strtol@plt>
 86b:	48 8b 35 ae 17 20 00 	mov    0x2017ae(%rip),%rsi        # 202020 <NUM_COLS>
 872:	48 63 d8             	movslq %eax,%rbx
 875:	48 39 ee             	cmp    %rbp,%rsi
 878:	76 4e                	jbe    8c8 <main+0xc8>
 87a:	48 39 de             	cmp    %rbx,%rsi
 87d:	76 49                	jbe    8c8 <main+0xc8>
 87f:	4c 8b 2d 92 17 20 00 	mov    0x201792(%rip),%r13        # 202018 <TUPLE_SIZE>
 886:	48 69 f6 00 b4 c4 04 	imul   $0x4c4b400,%rsi,%rsi
 88d:	4c 89 ef             	mov    %r13,%rdi
 890:	e8 4b ff ff ff       	callq  7e0 <aligned_alloc@plt>
 895:	4c 89 ef             	mov    %r13,%rdi
 898:	49 89 c4             	mov    %rax,%r12
 89b:	be 00 b4 c4 04       	mov    $0x4c4b400,%esi
 8a0:	e8 3b ff ff ff       	callq  7e0 <aligned_alloc@plt>
 8a5:	48 89 d9             	mov    %rbx,%rcx
 8a8:	48 89 ea             	mov    %rbp,%rdx
 8ab:	48 89 c6             	mov    %rax,%rsi
 8ae:	4c 89 e7             	mov    %r12,%rdi
 8b1:	e8 2a 04 00 00       	callq  ce0 <sum_two_cols>
 8b6:	e8 a5 fe ff ff       	callq  760 <free@plt>
 8bb:	48 83 c4 08          	add    $0x8,%rsp
 8bf:	31 c0                	xor    %eax,%eax
 8c1:	5b                   	pop    %rbx
 8c2:	5d                   	pop    %rbp
 8c3:	41 5c                	pop    %r12
 8c5:	41 5d                	pop    %r13
 8c7:	c3                   	retq   
 8c8:	48 8d 3d f1 05 00 00 	lea    0x5f1(%rip),%rdi        # ec0 <_IO_stdin_used+0x60>
 8cf:	e8 ac fe ff ff       	callq  780 <puts@plt>
 8d4:	bf 01 00 00 00       	mov    $0x1,%edi
 8d9:	e8 f2 fe ff ff       	callq  7d0 <exit@plt>
 8de:	48 8b 16             	mov    (%rsi),%rdx
 8e1:	48 8d 35 a0 05 00 00 	lea    0x5a0(%rip),%rsi        # e88 <_IO_stdin_used+0x28>
 8e8:	bf 01 00 00 00       	mov    $0x1,%edi
 8ed:	31 c0                	xor    %eax,%eax
 8ef:	e8 cc fe ff ff       	callq  7c0 <__printf_chk@plt>
 8f4:	bf 01 00 00 00       	mov    $0x1,%edi
 8f9:	e8 d2 fe ff ff       	callq  7d0 <exit@plt>
 8fe:	66 90                	xchg   %ax,%ax

0000000000000900 <_start>:
 900:	31 ed                	xor    %ebp,%ebp
 902:	49 89 d1             	mov    %rdx,%r9
 905:	5e                   	pop    %rsi
 906:	48 89 e2             	mov    %rsp,%rdx
 909:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
 90d:	50                   	push   %rax
 90e:	54                   	push   %rsp
 90f:	4c 8d 05 3a 05 00 00 	lea    0x53a(%rip),%r8        # e50 <__libc_csu_fini>
 916:	48 8d 0d c3 04 00 00 	lea    0x4c3(%rip),%rcx        # de0 <__libc_csu_init>
 91d:	48 8d 3d dc fe ff ff 	lea    -0x124(%rip),%rdi        # 800 <main>
 924:	ff 15 b6 16 20 00    	callq  *0x2016b6(%rip)        # 201fe0 <__libc_start_main@GLIBC_2.2.5>
 92a:	f4                   	hlt    
 92b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000000930 <deregister_tm_clones>:
 930:	48 8d 3d d9 16 20 00 	lea    0x2016d9(%rip),%rdi        # 202010 <__TMC_END__>
 937:	55                   	push   %rbp
 938:	48 8d 05 d1 16 20 00 	lea    0x2016d1(%rip),%rax        # 202010 <__TMC_END__>
 93f:	48 39 f8             	cmp    %rdi,%rax
 942:	48 89 e5             	mov    %rsp,%rbp
 945:	74 19                	je     960 <deregister_tm_clones+0x30>
 947:	48 8b 05 8a 16 20 00 	mov    0x20168a(%rip),%rax        # 201fd8 <_ITM_deregisterTMCloneTable>
 94e:	48 85 c0             	test   %rax,%rax
 951:	74 0d                	je     960 <deregister_tm_clones+0x30>
 953:	5d                   	pop    %rbp
 954:	ff e0                	jmpq   *%rax
 956:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 95d:	00 00 00 
 960:	5d                   	pop    %rbp
 961:	c3                   	retq   
 962:	0f 1f 40 00          	nopl   0x0(%rax)
 966:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 96d:	00 00 00 

0000000000000970 <register_tm_clones>:
 970:	48 8d 3d 99 16 20 00 	lea    0x201699(%rip),%rdi        # 202010 <__TMC_END__>
 977:	48 8d 35 92 16 20 00 	lea    0x201692(%rip),%rsi        # 202010 <__TMC_END__>
 97e:	55                   	push   %rbp
 97f:	48 29 fe             	sub    %rdi,%rsi
 982:	48 89 e5             	mov    %rsp,%rbp
 985:	48 c1 fe 03          	sar    $0x3,%rsi
 989:	48 89 f0             	mov    %rsi,%rax
 98c:	48 c1 e8 3f          	shr    $0x3f,%rax
 990:	48 01 c6             	add    %rax,%rsi
 993:	48 d1 fe             	sar    %rsi
 996:	74 18                	je     9b0 <register_tm_clones+0x40>
 998:	48 8b 05 51 16 20 00 	mov    0x201651(%rip),%rax        # 201ff0 <_ITM_registerTMCloneTable>
 99f:	48 85 c0             	test   %rax,%rax
 9a2:	74 0c                	je     9b0 <register_tm_clones+0x40>
 9a4:	5d                   	pop    %rbp
 9a5:	ff e0                	jmpq   *%rax
 9a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
 9ae:	00 00 
 9b0:	5d                   	pop    %rbp
 9b1:	c3                   	retq   
 9b2:	0f 1f 40 00          	nopl   0x0(%rax)
 9b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 9bd:	00 00 00 

00000000000009c0 <__do_global_dtors_aux>:
 9c0:	80 3d 49 16 20 00 00 	cmpb   $0x0,0x201649(%rip)        # 202010 <__TMC_END__>
 9c7:	75 2f                	jne    9f8 <__do_global_dtors_aux+0x38>
 9c9:	48 83 3d 27 16 20 00 	cmpq   $0x0,0x201627(%rip)        # 201ff8 <__cxa_finalize@GLIBC_2.2.5>
 9d0:	00 
 9d1:	55                   	push   %rbp
 9d2:	48 89 e5             	mov    %rsp,%rbp
 9d5:	74 0c                	je     9e3 <__do_global_dtors_aux+0x23>
 9d7:	48 8b 3d 2a 16 20 00 	mov    0x20162a(%rip),%rdi        # 202008 <__dso_handle>
 9de:	e8 0d fe ff ff       	callq  7f0 <__cxa_finalize@plt>
 9e3:	e8 48 ff ff ff       	callq  930 <deregister_tm_clones>
 9e8:	c6 05 21 16 20 00 01 	movb   $0x1,0x201621(%rip)        # 202010 <__TMC_END__>
 9ef:	5d                   	pop    %rbp
 9f0:	c3                   	retq   
 9f1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
 9f8:	f3 c3                	repz retq 
 9fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000000a00 <frame_dummy>:
 a00:	55                   	push   %rbp
 a01:	48 89 e5             	mov    %rsp,%rbp
 a04:	5d                   	pop    %rbp
 a05:	e9 66 ff ff ff       	jmpq   970 <register_tm_clones>
 a0a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000000a10 <print_sum_col>:
 a10:	41 54                	push   %r12
 a12:	48 8d 35 4b 04 00 00 	lea    0x44b(%rip),%rsi        # e64 <_IO_stdin_used+0x4>
 a19:	55                   	push   %rbp
 a1a:	53                   	push   %rbx
 a1b:	48 89 fd             	mov    %rdi,%rbp
 a1e:	31 c0                	xor    %eax,%eax
 a20:	bf 01 00 00 00       	mov    $0x1,%edi
 a25:	4c 8d 25 43 04 00 00 	lea    0x443(%rip),%r12        # e6f <_IO_stdin_used+0xf>
 a2c:	48 8d 5d 08          	lea    0x8(%rbp),%rbx
 a30:	e8 8b fd ff ff       	callq  7c0 <__printf_chk@plt>
 a35:	c5 fb 10 45 00       	vmovsd 0x0(%rbp),%xmm0
 a3a:	48 8d 35 29 04 00 00 	lea    0x429(%rip),%rsi        # e6a <_IO_stdin_used+0xa>
 a41:	bf 01 00 00 00       	mov    $0x1,%edi
 a46:	b8 01 00 00 00       	mov    $0x1,%eax
 a4b:	48 81 c5 00 b4 c4 04 	add    $0x4c4b400,%rbp
 a52:	e8 69 fd ff ff       	callq  7c0 <__printf_chk@plt>
 a57:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
 a5e:	00 00 
 a60:	4c 89 e6             	mov    %r12,%rsi
 a63:	bf 01 00 00 00       	mov    $0x1,%edi
 a68:	31 c0                	xor    %eax,%eax
 a6a:	e8 51 fd ff ff       	callq  7c0 <__printf_chk@plt>
 a6f:	c5 fb 10 03          	vmovsd (%rbx),%xmm0
 a73:	48 8d 35 f0 03 00 00 	lea    0x3f0(%rip),%rsi        # e6a <_IO_stdin_used+0xa>
 a7a:	bf 01 00 00 00       	mov    $0x1,%edi
 a7f:	b8 01 00 00 00       	mov    $0x1,%eax
 a84:	48 83 c3 08          	add    $0x8,%rbx
 a88:	e8 33 fd ff ff       	callq  7c0 <__printf_chk@plt>
 a8d:	48 39 dd             	cmp    %rbx,%rbp
 a90:	75 ce                	jne    a60 <print_sum_col+0x50>
 a92:	5b                   	pop    %rbx
 a93:	5d                   	pop    %rbp
 a94:	41 5c                	pop    %r12
 a96:	48 8d 3d d0 03 00 00 	lea    0x3d0(%rip),%rdi        # e6d <_IO_stdin_used+0xd>
 a9d:	e9 de fc ff ff       	jmpq   780 <puts@plt>
 aa2:	0f 1f 40 00          	nopl   0x0(%rax)
 aa6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 aad:	00 00 00 

0000000000000ab0 <populate_table>:
 ab0:	4c 8b 0d 69 15 20 00 	mov    0x201569(%rip),%r9        # 202020 <NUM_COLS>
 ab7:	31 d2                	xor    %edx,%edx
 ab9:	41 b8 80 96 98 00    	mov    $0x989680,%r8d
 abf:	4d 85 c9             	test   %r9,%r9
 ac2:	74 54                	je     b18 <populate_table+0x68>
 ac4:	0f 1f 40 00          	nopl   0x0(%rax)
 ac8:	49 8d 0c 11          	lea    (%r9,%rdx,1),%rcx
 acc:	eb 1d                	jmp    aeb <populate_table+0x3b>
 ace:	66 90                	xchg   %ax,%ax
 ad0:	c5 f8 57 c0          	vxorps %xmm0,%xmm0,%xmm0
 ad4:	c4 e1 fa 2a c2       	vcvtsi2ss %rdx,%xmm0,%xmm0
 ad9:	c5 fa 5a c0          	vcvtss2sd %xmm0,%xmm0,%xmm0
 add:	c5 fb 11 04 d7       	vmovsd %xmm0,(%rdi,%rdx,8)
 ae2:	48 83 c2 01          	add    $0x1,%rdx
 ae6:	48 39 d1             	cmp    %rdx,%rcx
 ae9:	74 25                	je     b10 <populate_table+0x60>
 aeb:	48 85 d2             	test   %rdx,%rdx
 aee:	79 e0                	jns    ad0 <populate_table+0x20>
 af0:	48 89 d0             	mov    %rdx,%rax
 af3:	48 89 d6             	mov    %rdx,%rsi
 af6:	c5 f8 57 c0          	vxorps %xmm0,%xmm0,%xmm0
 afa:	48 d1 e8             	shr    %rax
 afd:	83 e6 01             	and    $0x1,%esi
 b00:	48 09 f0             	or     %rsi,%rax
 b03:	c4 e1 fa 2a c0       	vcvtsi2ss %rax,%xmm0,%xmm0
 b08:	c5 fa 58 c0          	vaddss %xmm0,%xmm0,%xmm0
 b0c:	eb cb                	jmp    ad9 <populate_table+0x29>
 b0e:	66 90                	xchg   %ax,%ax
 b10:	49 83 e8 01          	sub    $0x1,%r8
 b14:	75 b2                	jne    ac8 <populate_table+0x18>
 b16:	f3 c3                	repz retq 
 b18:	f3 c3                	repz retq 
 b1a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000000b20 <print_table>:
 b20:	41 55                	push   %r13
 b22:	41 54                	push   %r12
 b24:	49 89 fc             	mov    %rdi,%r12
 b27:	55                   	push   %rbp
 b28:	53                   	push   %rbx
 b29:	48 8d 2d 3a 03 00 00 	lea    0x33a(%rip),%rbp        # e6a <_IO_stdin_used+0xa>
 b30:	31 db                	xor    %ebx,%ebx
 b32:	48 83 ec 08          	sub    $0x8,%rsp
 b36:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 b3d:	00 00 00 
 b40:	48 8d 35 2b 03 00 00 	lea    0x32b(%rip),%rsi        # e72 <_IO_stdin_used+0x12>
 b47:	48 89 da             	mov    %rbx,%rdx
 b4a:	bf 01 00 00 00       	mov    $0x1,%edi
 b4f:	31 c0                	xor    %eax,%eax
 b51:	45 31 ed             	xor    %r13d,%r13d
 b54:	e8 67 fc ff ff       	callq  7c0 <__printf_chk@plt>
 b59:	48 8b 05 c0 14 20 00 	mov    0x2014c0(%rip),%rax        # 202020 <NUM_COLS>
 b60:	49 39 c5             	cmp    %rax,%r13
 b63:	73 4e                	jae    bb3 <print_table+0x93>
 b65:	48 0f af c3          	imul   %rbx,%rax
 b69:	48 89 ee             	mov    %rbp,%rsi
 b6c:	bf 01 00 00 00       	mov    $0x1,%edi
 b71:	4c 01 e8             	add    %r13,%rax
 b74:	49 83 c5 01          	add    $0x1,%r13
 b78:	c4 c1 7b 10 04 c4    	vmovsd (%r12,%rax,8),%xmm0
 b7e:	b8 01 00 00 00       	mov    $0x1,%eax
 b83:	e8 38 fc ff ff       	callq  7c0 <__printf_chk@plt>
 b88:	48 8b 05 91 14 20 00 	mov    0x201491(%rip),%rax        # 202020 <NUM_COLS>
 b8f:	49 39 c5             	cmp    %rax,%r13
 b92:	74 cc                	je     b60 <print_table+0x40>
 b94:	48 8d 35 d4 02 00 00 	lea    0x2d4(%rip),%rsi        # e6f <_IO_stdin_used+0xf>
 b9b:	31 c0                	xor    %eax,%eax
 b9d:	bf 01 00 00 00       	mov    $0x1,%edi
 ba2:	e8 19 fc ff ff       	callq  7c0 <__printf_chk@plt>
 ba7:	48 8b 05 72 14 20 00 	mov    0x201472(%rip),%rax        # 202020 <NUM_COLS>
 bae:	49 39 c5             	cmp    %rax,%r13
 bb1:	72 b2                	jb     b65 <print_table+0x45>
 bb3:	48 8d 3d b3 02 00 00 	lea    0x2b3(%rip),%rdi        # e6d <_IO_stdin_used+0xd>
 bba:	48 83 c3 01          	add    $0x1,%rbx
 bbe:	e8 bd fb ff ff       	callq  780 <puts@plt>
 bc3:	48 81 fb 80 96 98 00 	cmp    $0x989680,%rbx
 bca:	0f 85 70 ff ff ff    	jne    b40 <print_table+0x20>
 bd0:	48 83 c4 08          	add    $0x8,%rsp
 bd4:	5b                   	pop    %rbx
 bd5:	5d                   	pop    %rbp
 bd6:	41 5c                	pop    %r12
 bd8:	41 5d                	pop    %r13
 bda:	c3                   	retq   
 bdb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000000be0 <print_m512d>:
 be0:	41 55                	push   %r13
 be2:	ba 00 b4 c4 04       	mov    $0x4c4b400,%edx
 be7:	4c 8d 6c 24 10       	lea    0x10(%rsp),%r13
 bec:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
 bf0:	41 ff 75 f8          	pushq  -0x8(%r13)
 bf4:	55                   	push   %rbp
 bf5:	48 89 e5             	mov    %rsp,%rbp
 bf8:	41 55                	push   %r13
 bfa:	41 54                	push   %r12
 bfc:	53                   	push   %rbx
 bfd:	48 8d 9d c0 4b 3b fb 	lea    -0x4c4b440(%rbp),%rbx
 c04:	48 8d b5 50 4b 3b fb 	lea    -0x4c4b4b0(%rbp),%rsi
 c0b:	48 81 ec 98 b4 c4 04 	sub    $0x4c4b498,%rsp
 c12:	48 89 df             	mov    %rbx,%rdi
 c15:	62 f1 fd 48 29 85 50 	vmovapd %zmm0,-0x4c4b4b0(%rbp)
 c1c:	4b 3b fb 
 c1f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
 c26:	00 00 
 c28:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
 c2c:	31 c0                	xor    %eax,%eax
 c2e:	c5 f8 77             	vzeroupper 
 c31:	e8 7a fb ff ff       	callq  7b0 <memcpy@plt>
 c36:	48 8d 35 41 02 00 00 	lea    0x241(%rip),%rsi        # e7e <_IO_stdin_used+0x1e>
 c3d:	bf 01 00 00 00       	mov    $0x1,%edi
 c42:	31 c0                	xor    %eax,%eax
 c44:	4c 8d ad 88 4b 3b fb 	lea    -0x4c4b478(%rbp),%r13
 c4b:	4c 8d 25 1d 02 00 00 	lea    0x21d(%rip),%r12        # e6f <_IO_stdin_used+0xf>
 c52:	e8 69 fb ff ff       	callq  7c0 <__printf_chk@plt>
 c57:	c5 fb 10 85 f8 4b 3b 	vmovsd -0x4c4b408(%rbp),%xmm0
 c5e:	fb 
 c5f:	48 8d 35 04 02 00 00 	lea    0x204(%rip),%rsi        # e6a <_IO_stdin_used+0xa>
 c66:	bf 01 00 00 00       	mov    $0x1,%edi
 c6b:	b8 01 00 00 00       	mov    $0x1,%eax
 c70:	e8 4b fb ff ff       	callq  7c0 <__printf_chk@plt>
 c75:	0f 1f 00             	nopl   (%rax)
 c78:	4c 89 e6             	mov    %r12,%rsi
 c7b:	bf 01 00 00 00       	mov    $0x1,%edi
 c80:	31 c0                	xor    %eax,%eax
 c82:	e8 39 fb ff ff       	callq  7c0 <__printf_chk@plt>
 c87:	c5 fb 10 43 30       	vmovsd 0x30(%rbx),%xmm0
 c8c:	48 8d 35 d7 01 00 00 	lea    0x1d7(%rip),%rsi        # e6a <_IO_stdin_used+0xa>
 c93:	bf 01 00 00 00       	mov    $0x1,%edi
 c98:	b8 01 00 00 00       	mov    $0x1,%eax
 c9d:	48 83 eb 08          	sub    $0x8,%rbx
 ca1:	e8 1a fb ff ff       	callq  7c0 <__printf_chk@plt>
 ca6:	49 39 dd             	cmp    %rbx,%r13
 ca9:	75 cd                	jne    c78 <print_m512d+0x98>
 cab:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 caf:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
 cb6:	00 00 
 cb8:	75 1d                	jne    cd7 <print_m512d+0xf7>
 cba:	48 81 c4 98 b4 c4 04 	add    $0x4c4b498,%rsp
 cc1:	bf 0a 00 00 00       	mov    $0xa,%edi
 cc6:	5b                   	pop    %rbx
 cc7:	41 5c                	pop    %r12
 cc9:	41 5d                	pop    %r13
 ccb:	5d                   	pop    %rbp
 ccc:	49 8d 65 f0          	lea    -0x10(%r13),%rsp
 cd0:	41 5d                	pop    %r13
 cd2:	e9 99 fa ff ff       	jmpq   770 <putchar@plt>
 cd7:	e8 b4 fa ff ff       	callq  790 <__stack_chk_fail@plt>
 cdc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000ce0 <sum_two_cols>:
 ce0:	4c 8d 54 24 08       	lea    0x8(%rsp),%r10
 ce5:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
 ce9:	62 f1 75 28 ef c9    	vpxord %ymm1,%ymm1,%ymm1
 cef:	41 ff 72 f8          	pushq  -0x8(%r10)
 cf3:	55                   	push   %rbp
 cf4:	48 89 e5             	mov    %rsp,%rbp
 cf7:	41 52                	push   %r10
 cf9:	53                   	push   %rbx
 cfa:	48 8b 05 17 13 20 00 	mov    0x201317(%rip),%rax        # 202018 <TUPLE_SIZE>
 d01:	4c 8d 04 c5 00 00 00 	lea    0x0(,%rax,8),%r8
 d08:	00 
 d09:	4c 8d 14 00          	lea    (%rax,%rax,1),%r10
 d0d:	4c 8d 0c 85 00 00 00 	lea    0x0(,%rax,4),%r9
 d14:	00 
 d15:	c4 e3 f1 22 c8 00    	vpinsrq $0x0,%rax,%xmm1,%xmm1
 d1b:	49 29 c0             	sub    %rax,%r8
 d1e:	49 8d 1c 01          	lea    (%r9,%rax,1),%rbx
 d22:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
 d26:	4d 8d 04 02          	lea    (%r10,%rax,1),%r8
 d2a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 d2f:	48 89 5d c0          	mov    %rbx,-0x40(%rbp)
 d33:	c5 fa 7e 75 c8       	vmovq  -0x38(%rbp),%xmm6
 d38:	c5 f9 92 c8          	kmovb  %eax,%k1
 d3c:	4f 8d 1c 00          	lea    (%r8,%r8,1),%r11
 d40:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
 d44:	45 31 c0             	xor    %r8d,%r8d
 d47:	c5 fa 7e 65 b8       	vmovq  -0x48(%rbp),%xmm4
 d4c:	c5 fa 7e 6d c0       	vmovq  -0x40(%rbp),%xmm5
 d51:	c4 c3 d9 22 c2 01    	vpinsrq $0x1,%r10,%xmm4,%xmm0
 d57:	c4 c3 d1 22 d9 01    	vpinsrq $0x1,%r9,%xmm5,%xmm3
 d5d:	c4 c3 c9 22 d3 01    	vpinsrq $0x1,%r11,%xmm6,%xmm2
 d63:	c4 e3 7d 38 c1 01    	vinserti128 $0x1,%xmm1,%ymm0,%ymm0
 d69:	c4 e3 6d 38 d3 01    	vinserti128 $0x1,%xmm3,%ymm2,%ymm2
 d6f:	62 f3 ed 48 3a d0 01 	vinserti64x4 $0x1,%ymm0,%zmm2,%zmm2
 d76:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 d7d:	00 00 00 
 d80:	48 8b 05 99 12 20 00 	mov    0x201299(%rip),%rax        # 202020 <NUM_COLS>
 d87:	c5 f9 90 d1          	kmovb  %k1,%k2
 d8b:	c5 f9 90 d9          	kmovb  %k1,%k3
 d8f:	48 83 c6 40          	add    $0x40,%rsi
 d93:	49 0f af c0          	imul   %r8,%rax
 d97:	49 83 c0 08          	add    $0x8,%r8
 d9b:	4c 8d 0c 10          	lea    (%rax,%rdx,1),%r9
 d9f:	48 01 c8             	add    %rcx,%rax
 da2:	48 8d 04 c7          	lea    (%rdi,%rax,8),%rax
 da6:	4e 8d 0c cf          	lea    (%rdi,%r9,8),%r9
 daa:	62 f2 fd 4b 93 04 10 	vgatherqpd (%rax,%zmm2,1),%zmm0{%k3}
 db1:	62 d2 fd 4a 93 0c 11 	vgatherqpd (%r9,%zmm2,1),%zmm1{%k2}
 db8:	62 f1 fd 48 58 c1    	vaddpd %zmm1,%zmm0,%zmm0
 dbe:	62 f1 fd 48 2b 46 ff 	vmovntpd %zmm0,-0x40(%rsi)
 dc5:	49 81 f8 80 96 98 00 	cmp    $0x989680,%r8
 dcc:	75 b2                	jne    d80 <sum_two_cols+0xa0>
 dce:	c5 f8 77             	vzeroupper 
 dd1:	5b                   	pop    %rbx
 dd2:	41 5a                	pop    %r10
 dd4:	5d                   	pop    %rbp
 dd5:	49 8d 62 f8          	lea    -0x8(%r10),%rsp
 dd9:	c3                   	retq   
 dda:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000000de0 <__libc_csu_init>:
 de0:	41 57                	push   %r15
 de2:	41 56                	push   %r14
 de4:	49 89 d7             	mov    %rdx,%r15
 de7:	41 55                	push   %r13
 de9:	41 54                	push   %r12
 deb:	4c 8d 25 86 0f 20 00 	lea    0x200f86(%rip),%r12        # 201d78 <__frame_dummy_init_array_entry>
 df2:	55                   	push   %rbp
 df3:	48 8d 2d 86 0f 20 00 	lea    0x200f86(%rip),%rbp        # 201d80 <__init_array_end>
 dfa:	53                   	push   %rbx
 dfb:	41 89 fd             	mov    %edi,%r13d
 dfe:	49 89 f6             	mov    %rsi,%r14
 e01:	4c 29 e5             	sub    %r12,%rbp
 e04:	48 83 ec 08          	sub    $0x8,%rsp
 e08:	48 c1 fd 03          	sar    $0x3,%rbp
 e0c:	e8 1f f9 ff ff       	callq  730 <_init>
 e11:	48 85 ed             	test   %rbp,%rbp
 e14:	74 20                	je     e36 <__libc_csu_init+0x56>
 e16:	31 db                	xor    %ebx,%ebx
 e18:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
 e1f:	00 
 e20:	4c 89 fa             	mov    %r15,%rdx
 e23:	4c 89 f6             	mov    %r14,%rsi
 e26:	44 89 ef             	mov    %r13d,%edi
 e29:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
 e2d:	48 83 c3 01          	add    $0x1,%rbx
 e31:	48 39 dd             	cmp    %rbx,%rbp
 e34:	75 ea                	jne    e20 <__libc_csu_init+0x40>
 e36:	48 83 c4 08          	add    $0x8,%rsp
 e3a:	5b                   	pop    %rbx
 e3b:	5d                   	pop    %rbp
 e3c:	41 5c                	pop    %r12
 e3e:	41 5d                	pop    %r13
 e40:	41 5e                	pop    %r14
 e42:	41 5f                	pop    %r15
 e44:	c3                   	retq   
 e45:	90                   	nop
 e46:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 e4d:	00 00 00 

0000000000000e50 <__libc_csu_fini>:
 e50:	f3 c3                	repz retq 

Disassembly of section .fini:

0000000000000e54 <_fini>:
 e54:	48 83 ec 08          	sub    $0x8,%rsp
 e58:	48 83 c4 08          	add    $0x8,%rsp
 e5c:	c3                   	retq   
